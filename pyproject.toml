[project]
name = "libscribe"
version = "0.1.0"
description = "A tool for ingesting library documentation and source code to enable AI models to provide context-aware coding assistance, usage examples, and best practices."
readme = "README.md"
requires-python = ">=3.12"

dependencies = [
    "fastapi>=0.115.7",
    "llama-index>=0.12.14",
    "llama-index-embeddings-voyageai>=0.3.4",
    "llama-index-llms-litellm>=0.3.0",
    "llama-index-readers-github>=0.5.0",
    "llama-index-vector-stores-pinecone>=0.4.3",
    "pinecone[grpc]>=5.4.2",
    "pydantic>=2.10.6",
    "python-dotenv>=1.0.1",
    "uvicorn>=0.34.0",
]

[dependency-groups]
dev = ["ruff>=0.9.3", "pytest>=8.3.4", "pytest-asyncio>=0.23.5"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore:Type google\\._upb\\._message\\.MessageMapContainer uses PyType_Spec:DeprecationWarning",
    "ignore:Type google\\._upb\\._message\\.ScalarMapContainer uses PyType_Spec:DeprecationWarning",
    "ignore::pytest.PytestDeprecationWarning",
]

[tool.uvicorn]
app = "src.app.main:app"
host = "0.0.0.0"
port = 8000
reload = true

[tool.ruff]
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    "UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

[tool.ruff.lint.pydocstyle]
convention = "google"
